"""
This is a WLST script that is generated by the WebLogic Scripting Tool (WLST)
Configuration file converted               : /u01/oracle/product/fmw/11.1.2/user_projects/domains/OAM/config/config.xml
WLST script generated to file              : /home/oracle/oam
Properties file associated with the script : /home/oracle/oam.properties

This script will first try to connect to a running server using the 
values in the properties file. If there is no server running, WLST
will start a server with the values in the properties file. You should change
these values to suit your environmental needs. After running the script, 
the server that is started(if started one) will be shutdown. 
This might exit you from your WLST shell."""

from weblogic.descriptor import BeanAlreadyExistsException
from java.lang.reflect import UndeclaredThrowableException
from java.lang import System
import javax
from javax import management
from javax.management import MBeanException
from javax.management import RuntimeMBeanException
import javax.management.MBeanException
from java.lang import UnsupportedOperationException


def initConfigToScriptRun():
  global startedNewServer
  loadProperties("/home/oracle/oam.properties")
  hideDisplay()
  hideDumpStack("true")
  # try connecting to a running server if it is already running ... 
  if connected=="false":
    try:
      URL="t3://"+adminServerListenAddress+":"+adminServerListenPort
      connect(userName, passWord, URL, userConfigFile="/home/oracle/c2sConfigOAM", userKeyFile="/home/oracle/c2sSecretOAM")
    except WLSTException:
      print 'No server is running at '+URL+', the script will start a new server'
  hideDumpStack("false")
  if connected=="false":
    print 'Starting a brand new server at '+URL+' with server name '+adminServerName
    print 'Please see the server log files for startup messages available at '+domainDir
    # If a config.xml exists in the domainDir, WLST will use that config.xml to bring up the server. 
    # If you would like WLST to overwrite this directory, you should specify overWriteRootDir='true' as shown below
    # startServer(adminServerName, domName, URL, userName, passWord,domainDir, overWriteRootDir='true')
    _timeOut = Integer(TimeOut)
    # If you want to specify additional JVM arguments, set them using startServerJvmArgs in the property file or below
    _startServerJvmArgs=startServerJvmArgs
    if (_startServerJvmArgs=="" and (System.getProperty("java.vendor").find("Sun")>=0 or System.getProperty("java.vendor").find("Hewlett")>=0)):
      _startServerJvmArgs = " -XX:MaxPermSize=128m"
    if overWriteRootDir=='true':
      startServer(adminServerName, domName, URL, userName, passWord,domainDir, timeout=_timeOut.intValue(), overWriteRootDir='true', block='true', jvmArgs=_startServerJvmArgs)
    else:
      startServer(adminServerName, domName, URL, userName, passWord,domainDir, timeout=_timeOut.intValue(), block='true', jvmArgs=_startServerJvmArgs)
    startedNewServer=1
    print "Started Server. Trying to connect to the server ... "
    connect(userName, passWord, URL, userConfigFile="/home/oracle/c2sConfigOAM", userKeyFile="/home/oracle/c2sSecretOAM")
    if connected=='false':
      stopExecution('You need to be connected.')

def startTransaction():
  edit()
  startEdit()

def endTransaction():
  startEdit()
  save()
  activate(block="true")

from javax.management import InstanceAlreadyExistsException
from java.lang import Exception
from jarray import array

def endOfConfigToScriptRun():
  global startedNewServer
  #Save the changes you have made
  # shutdown the server you have started
  if startedNewServer==1:
    print 'Shutting down the server that is started... '
    shutdown(force='true', block='true')
  print 'Done executing the script.'

def create_Server_0(path, beanName):
  cd(path)
  try:
    print "creating mbean of type Server ... "
    theBean = cmo.lookupServer(beanName)
    if theBean == None:
      cmo.createServer(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_WLDFSystemResource_8(path, beanName):
  cd(path)
  try:
    print "creating mbean of type WLDFSystemResource ... "
    theBean = cmo.lookupWLDFSystemResource(beanName)
    if theBean == None:
      cmo.createWLDFSystemResource(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_JMXNotification_10(path, beanName):
  cd(path)
  try:
    print "creating mbean of type JMXNotification ... "
    theBean = cmo.lookupJMXNotification(beanName)
    if theBean == None:
      cmo.createJMXNotification(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_Watch_12(path, beanName):
  cd(path)
  try:
    print "creating mbean of type Watch ... "
    theBean = cmo.lookupWatch(beanName)
    if theBean == None:
      cmo.createWatch(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_Realm_20(path, beanName):
  cd(path)
  try:
    print "creating mbean of type Realm ... "
    theBean = cmo.lookupRealm(beanName)
    if theBean == None:
      cmo.createRealm(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_Authorizer_22(path, beanName):
  cd(path)
  try:
    print "creating mbean of type Authorizer ... "
    theBean = cmo.lookupAuthorizer(beanName)
    if theBean == None:
      cmo.createAuthorizer(beanName,"weblogic.security.providers.xacml.authorization.XACMLAuthorizer")
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_Adjudicator_24(path, beanName):
  cd(path)
  try:
    print "creating mbean of type Adjudicator ... "
    theBean = cmo.getAdjudicator()
    if theBean == None:
      cmo.createAdjudicator(beanName,"weblogic.security.providers.authorization.DefaultAdjudicator")
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_AuthenticationProvider_26(path, beanName):
  cd(path)
  try:
    print "creating mbean of type AuthenticationProvider ... "
    theBean = cmo.lookupAuthenticationProvider(beanName)
    if theBean == None:
      cmo.createAuthenticationProvider(beanName,"weblogic.security.providers.authentication.DefaultAuthenticator")
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_CertPathProvider_32(path, beanName):
  cd(path)
  try:
    print "creating mbean of type CertPathProvider ... "
    theBean = cmo.lookupCertPathProvider(beanName)
    if theBean == None:
      cmo.createCertPathProvider(beanName,"weblogic.security.providers.pk.WebLogicCertPathProvider")
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_CredentialMapper_34(path, beanName):
  cd(path)
  try:
    print "creating mbean of type CredentialMapper ... "
    theBean = cmo.lookupCredentialMapper(beanName)
    if theBean == None:
      cmo.createCredentialMapper(beanName,"weblogic.security.providers.credentials.DefaultCredentialMapper")
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_RoleMapper_36(path, beanName):
  cd(path)
  try:
    print "creating mbean of type RoleMapper ... "
    theBean = cmo.lookupRoleMapper(beanName)
    if theBean == None:
      cmo.createRoleMapper(beanName,"weblogic.security.providers.xacml.authorization.XACMLRoleMapper")
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_StartupClass_38(path, beanName):
  cd(path)
  try:
    print "creating mbean of type StartupClass ... "
    theBean = cmo.lookupStartupClass(beanName)
    if theBean == None:
      cmo.createStartupClass(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_ShutdownClass_56(path, beanName):
  cd(path)
  try:
    print "creating mbean of type ShutdownClass ... "
    theBean = cmo.lookupShutdownClass(beanName)
    if theBean == None:
      cmo.createShutdownClass(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_JDBCSystemResource_60(path, beanName):
  cd(path)
  try:
    print "creating mbean of type JDBCSystemResource ... "
    theBean = cmo.lookupJDBCSystemResource(beanName)
    if theBean == None:
      cmo.createJDBCSystemResource(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass

def create_Property_62(path, beanName):
  cd(path)
  try:
    print "creating mbean of type Property ... "
    theBean = cmo.lookupProperty(beanName)
    if theBean == None:
      cmo.createProperty(beanName)
  except java.lang.UnsupportedOperationException, usoe:
    pass
  except weblogic.descriptor.BeanAlreadyExistsException,bae:
    pass
  except java.lang.reflect.UndeclaredThrowableException,udt:
    pass
  except TypeError:
    prop = cmo.createProperty()
    prop.setName(beanName)

def setAttributesFor_JOC_Shutdown_57():
  cd("/ShutdownClasses/JOC-Shutdown")
  print "setting attributes for mbean type ShutdownClass"
  set("ClassName", "oracle.ias.cache.Shutdown")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributes_JDBCConnectionPoolParams_92():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCConnectionPoolParams/mds-owsm")
  print "setting attributes for mbean type JDBCConnectionPoolParams"
  set("TestConnectionsOnReserve", "true")
  set("TestTableName", "SQL SELECT 1 FROM DUAL")
  set("SecondsToTrustAnIdlePoolConnection", "0")
  set("TestFrequencySeconds", "300")
  set("InitialCapacity", "0")
  set("ConnectionCreationRetryFrequencySeconds", "10")

def setAttributesFor_user_63():
  cd("/JDBCSystemResources/opss-DBDS/JDBCResource/opss-DBDS/JDBCDriverParams/opss-DBDS/Properties/opss-DBDS/Properties/user")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "DEV_OPSS")
  set("Name", "user")

def setAttributes_JDBCDriverParams_93():
  cd("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCDriverParams/oamDS")
  print "setting attributes for mbean type JDBCDriverParams"
  setEncrypted("Password", "c2s94", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("Password", "c2s95", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  set("DriverName", "oracle.jdbc.OracleDriver")
  set("Url", "jdbc:oracle:thin:@oim.scendoni.org:1521/orcl.scendoni.org")

def setAttributesFor_oam_policy_mgr1_7():
  cd("/Servers/oam_policy_mgr1")
  print "setting attributes for mbean type Server"
  set("ListenPort", "14150")
  set("ListenAddress", "")

def setAttributesFor_DMS_Startup_53():
  cd("/StartupClasses/DMS-Startup")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.dms.wls.DMSStartup")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_GMS_Startup_55():
  cd("/StartupClasses/GMS-Startup")
  print "setting attributes for mbean type StartupClass"
  set("ClassName", "oracle.idm.gateway.gms.StartupShutdownProvider")
  refBean0 = getMBean("/Servers/omsm_server1")
  theValue = jarray.array([refBean0], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_UncheckedException_13():
  cd("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW/Watches/UncheckedException")
  print "setting attributes for mbean type WLDFWatch"
  set("Enabled", "true")
  set("AlarmType", "AutomaticReset")
  set("RuleType", "Log")
  set("AlarmResetPeriod", "30000")
  set("RuleExpression", "(SEVERITY = \'Error\') AND ((MSGID = \'WL-101020\') OR (MSGID = \'WL-101017\') OR (MSGID = \'WL-000802\') OR (MSGID = \'BEA-101020\') OR (MSGID = \'BEA-101017\') OR (MSGID = \'BEA-000802\'))")

def setAttributesFor_user_87():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam/Properties/mds-oam/Properties/user")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "DEV_MDS")
  set("Name", "user")

def setAttributes_JDBCConnectionPoolParams_96():
  cd("/JDBCSystemResources/opss-DBDS/JDBCResource/opss-DBDS/JDBCConnectionPoolParams/opss-DBDS")
  print "setting attributes for mbean type JDBCConnectionPoolParams"
  set("TestTableName", "SQL SELECT 1 FROM DUAL")

def setAttributes_JDBCDataSource_97():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam")
  print "setting attributes for mbean type JDBCDataSource"
  set("Name", "mds-oam")

def setAttributesFor_mds_oam_85():
  cd("/JDBCSystemResources/mds-oam")
  print "setting attributes for mbean type JDBCSystemResource"
  refBean0 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributes_EmbeddedLDAP_98():
  cd("/EmbeddedLDAP/OAM")
  print "setting attributes for mbean type EmbeddedLDAP"
  setEncrypted("Credential", "c2s99", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("Credential", "c2s100", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")

def setAttributesFor_DefaultIdentityAsserter_29():
  cd("/SecurityConfiguration/OAM/Realms/myrealm/AuthenticationProviders/DefaultIdentityAsserter")
  print "setting attributes for mbean type DefaultIdentityAsserter"
  set("ActiveTypes", jarray.array(["AuthenticatedUser"], String))

def setAttributesFor_oam_server1_3():
  cd("/Servers/oam_server1")
  print "setting attributes for mbean type Server"
  set("ListenPort", "14100")
  set("ListenAddress", "")

def setAttributes_JDBCDataSource_101():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm")
  print "setting attributes for mbean type JDBCDataSource"
  set("Name", "mds-owsm")

def setAttributesFor_mds_owsm_65():
  cd("/JDBCSystemResources/mds-owsm")
  print "setting attributes for mbean type JDBCSystemResource"
  refBean0 = getMBean("/Servers/omsm_server1")
  theValue = jarray.array([refBean0], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_Deadlock_15():
  cd("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW/Watches/Deadlock")
  print "setting attributes for mbean type WLDFWatch"
  set("Enabled", "true")
  set("AlarmType", "AutomaticReset")
  set("RuleType", "Log")
  set("AlarmResetPeriod", "30000")
  set("RuleExpression", "((SEVERITY = \'Critical\') OR (SEVERITY = \'Info\')) AND ((MSGID = \'WL-000394\') OR (MSGID = \'BEA-000394\'))")

def setAttributes_JDBCDriverParams_102():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam")
  print "setting attributes for mbean type JDBCDriverParams"
  setEncrypted("Password", "c2s103", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("Password", "c2s104", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  set("DriverName", "oracle.jdbc.OracleDriver")
  set("Url", "jdbc:oracle:thin:@oim.scendoni.org:1521/orcl.scendoni.org")

def setAttributes_JDBCDataSourceParams_105():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDataSourceParams/mds-owsm")
  print "setting attributes for mbean type JDBCDataSourceParams"
  set("GlobalTransactionsProtocol", "None")
  set("JNDINames", jarray.array(["jdbc/mds/owsm"], String))

def setAttributesFor_DefaultAuthenticator_27():
  cd("/SecurityConfiguration/OAM/Realms/myrealm/AuthenticationProviders/DefaultAuthenticator")
  print "setting attributes for mbean type DefaultAuthenticator"
  set("PropagateCauseForLoginException", "false")
  set("UseRetrievedUserNameAsPrincipal", "true")

def setAttributes_JDBCDataSourceParams_106():
  cd("/JDBCSystemResources/opss-DBDS/JDBCResource/opss-DBDS/JDBCDataSourceParams/opss-DBDS")
  print "setting attributes for mbean type JDBCDataSourceParams"
  set("GlobalTransactionsProtocol", "None")
  set("JNDINames", jarray.array(["jdbc/OPSSDBDS"], String))

def setAttributesFor_user_67():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm/Properties/mds-owsm/Properties/user")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "DEV_MDS")
  set("Name", "user")

def setAttributes_WLDFServerDiagnostic_107():
  cd("/Servers/oam_policy_mgr1/ServerDiagnosticConfig/oam_policy_mgr1")
  print "setting attributes for mbean type WLDFServerDiagnostic"
  set("DiagnosticContextEnabled", "true")

def setAttributesFor_JOC_Startup_51():
  cd("/StartupClasses/JOC-Startup")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.ias.cache.Startup")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_opss_DBDS_61():
  cd("/JDBCSystemResources/opss-DBDS")
  print "setting attributes for mbean type JDBCSystemResource"
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributes_JDBCDataSource_108():
  cd("/JDBCSystemResources/opss-DBDS/JDBCResource/opss-DBDS")
  print "setting attributes for mbean type JDBCDataSource"
  set("Name", "opss-DBDS")

def setAttributesFor_oracle_net_CONNECT_TIMEOUT_69():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm/Properties/mds-owsm/Properties/oracle.net.CONNECT_TIMEOUT")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "10000")
  set("Name", "oracle.net.CONNECT_TIMEOUT")

def setAttributes_JDBCDriverParams_109():
  cd("/JDBCSystemResources/opss-DBDS/JDBCResource/opss-DBDS/JDBCDriverParams/opss-DBDS")
  print "setting attributes for mbean type JDBCDriverParams"
  setEncrypted("Password", "c2s110", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("Password", "c2s111", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  set("DriverName", "oracle.jdbc.OracleDriver")
  set("Url", "jdbc:oracle:thin:@oim.scendoni.org:1521/orcl.scendoni.org")

def setAttributes_JDBCDataSource_112():
  cd("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds")
  print "setting attributes for mbean type JDBCDataSource"
  set("Name", "omsm-ds")

def setAttributesFor_omsm_ds_79():
  cd("/JDBCSystemResources/omsm-ds")
  print "setting attributes for mbean type JDBCSystemResource"
  refBean0 = getMBean("/Servers/omsm_server1")
  refBean1 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributes_JDBCDataSourceParams_113():
  cd("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCDataSourceParams/omsm-ds")
  print "setting attributes for mbean type JDBCDataSourceParams"
  set("GlobalTransactionsProtocol", "None")
  set("JNDINames", jarray.array(["jdbc/omsm-ds"], String))

def setAttributesFor_DMSShutdown_59():
  cd("/ShutdownClasses/DMSShutdown")
  print "setting attributes for mbean type ShutdownClass"
  set("ClassName", "oracle.dms.wls.DMSShutdown")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_AdminServer_1():
  cd("/Servers/AdminServer")
  print "setting attributes for mbean type Server"
  set("ListenAddress", "")

def setAttributesFor_SendStreamAsBlob_71():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm/Properties/mds-owsm/Properties/SendStreamAsBlob")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "true")
  set("Name", "SendStreamAsBlob")

def setAttributes_WLDFServerDiagnostic_114():
  cd("/Servers/omsm_server1/ServerDiagnosticConfig/omsm_server1")
  print "setting attributes for mbean type WLDFServerDiagnostic"
  set("DiagnosticContextEnabled", "true")

def setAttributesFor_JMX_Framework_Startup_Class_47():
  cd("/StartupClasses/JMX Framework Startup Class")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.as.jmx.framework.wls.spi.StartupListener")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_oracle_net_CONNECT_TIMEOUT_89():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam/Properties/mds-oam/Properties/oracle.net.CONNECT_TIMEOUT")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "10000")
  set("Name", "oracle.net.CONNECT_TIMEOUT")

def setAttributes_JDBCDataSource_115():
  cd("/JDBCSystemResources/oamDS/JDBCResource/oamDS")
  print "setting attributes for mbean type JDBCDataSource"
  set("Name", "oamDS")

def setAttributesFor_oamDS_73():
  cd("/JDBCSystemResources/oamDS")
  print "setting attributes for mbean type JDBCSystemResource"
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_Module_FMWDFW_9():
  cd("/WLDFSystemResources/Module-FMWDFW")
  print "setting attributes for mbean type WLDFSystemResource"
  set("Description", "Creates FMWDFW incidents based on unchecked Exceptions and critical errors")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributes_WLDFServerDiagnostic_116():
  cd("/Servers/oam_server1/ServerDiagnosticConfig/oam_server1")
  print "setting attributes for mbean type WLDFServerDiagnostic"
  set("DiagnosticContextEnabled", "true")

def setAttributes_SecurityConfiguration_117():
  cd("/SecurityConfiguration/OAM")
  print "setting attributes for mbean type SecurityConfiguration"
  setEncrypted("Credential", "c2s118", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("NodeManagerPassword", "c2s119", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("NodeManagerPassword", "c2s120", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  set("NodeManagerUsername", "weblogic")
  setEncrypted("Credential", "c2s121", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")

def setAttributes_JDBCConnectionPoolParams_122():
  cd("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCConnectionPoolParams/omsm-ds")
  print "setting attributes for mbean type JDBCConnectionPoolParams"
  set("TestConnectionsOnReserve", "true")
  set("TestTableName", "SQL SELECT 1 FROM DUAL")
  set("SecondsToTrustAnIdlePoolConnection", "0")
  set("TestFrequencySeconds", "300")
  set("MaxCapacity", "50")
  set("InitialCapacity", "0")
  set("ConnectionCreationRetryFrequencySeconds", "10")
  set("CapacityIncrement", "1")

def setAttributes_JDBCDataSourceParams_123():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDataSourceParams/mds-oam")
  print "setting attributes for mbean type JDBCDataSourceParams"
  set("GlobalTransactionsProtocol", "None")
  set("JNDINames", jarray.array(["jdbc/mds/oam"], String))

def setAttributesFor_SendStreamAsBlob_91():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam/Properties/mds-oam/Properties/SendStreamAsBlob")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "true")
  set("Name", "SendStreamAsBlob")

def setAttributes_SSL_124():
  cd("/Servers/oam_server1/SSL/oam_server1")
  print "setting attributes for mbean type SSL"
  set("ListenPort", "14101")

def setAttributesFor_StuckThread_17():
  cd("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW/Watches/StuckThread")
  print "setting attributes for mbean type WLDFWatch"
  set("Enabled", "true")
  set("AlarmType", "AutomaticReset")
  set("RuleType", "Log")
  set("AlarmResetPeriod", "600000")
  set("RuleExpression", "(SEVERITY = \'Error\') AND ((MSGID = \'WL-000337\') OR (MSGID = \'BEA-000337\'))")

def setAttributesFor_omsm_server1_5():
  cd("/Servers/omsm_server1")
  print "setting attributes for mbean type Server"
  set("ListenPort", "14180")
  set("CompleteMessageTimeout", "480")
  set("ListenAddress", "")

def setAttributes_JDBCDriverParams_125():
  cd("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCDriverParams/omsm-ds")
  print "setting attributes for mbean type JDBCDriverParams"
  setEncrypted("Password", "c2s126", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("Password", "c2s127", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  set("DriverName", "oracle.jdbc.OracleDriver")
  set("Url", "jdbc:oracle:thin:@oim.scendoni.org:1521/orcl.scendoni.org")

def setAttributesFor_oracle_net_CONNECT_TIMEOUT_77():
  cd("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCDriverParams/oamDS/Properties/oamDS/Properties/oracle.net.CONNECT_TIMEOUT")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "10000")
  set("Name", "oracle.net.CONNECT_TIMEOUT")

def setAttributesFor_AWT_Application_Context_Startup_Class_45():
  cd("/StartupClasses/AWT Application Context Startup Class")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.jrf.AppContextStartup")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_ODL_Startup_43():
  cd("/StartupClasses/ODL-Startup")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.core.ojdl.weblogic.ODLConfiguration")
  set("DeploymentOrder", "145")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributes_SSL_128():
  cd("/Servers/omsm_server1/SSL/omsm_server1")
  print "setting attributes for mbean type SSL"
  set("Enabled", "true")
  set("ListenPort", "14181")

def setAttributesFor_FMWDFW_notification_11():
  cd("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW/JMXNotifications/FMWDFW-notification")
  print "setting attributes for mbean type WLDFJMXNotification"
  set("NotificationType", "oracle.dfw.wldfnotification")

def setAttributes_WLDFServerDiagnostic_129():
  cd("/Servers/AdminServer/ServerDiagnosticConfig/AdminServer")
  print "setting attributes for mbean type WLDFServerDiagnostic"
  set("DiagnosticContextEnabled", "true")

def setAttributes_SSL_130():
  cd("/Servers/oam_policy_mgr1/SSL/oam_policy_mgr1")
  print "setting attributes for mbean type SSL"
  set("ListenPort", "14151")

def setAttributesFor_user_81():
  cd("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCDriverParams/omsm-ds/Properties/omsm-ds/Properties/user")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "DEV_OMSM")
  set("Name", "user")

def setAttributes_Domain_131():
  cd("/")
  print "setting attributes for mbean type Domain"
  set("DomainVersion", "10.3.6.0")
  set("ConfigurationVersion", "10.3.6.0")
  set("AdminServerName", "AdminServer")

def setAttributes_JDBCDataSourceParams_132():
  cd("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCDataSourceParams/oamDS")
  print "setting attributes for mbean type JDBCDataSourceParams"
  set("GlobalTransactionsProtocol", "OnePhaseCommit")
  set("JNDINames", jarray.array(["jdbc/oamds"], String))

def setAttributesFor_oracle_net_CONNECT_TIMEOUT_83():
  cd("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCDriverParams/omsm-ds/Properties/omsm-ds/Properties/oracle.net.CONNECT_TIMEOUT")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "10000")
  set("Name", "oracle.net.CONNECT_TIMEOUT")

def setAttributesFor_HeapSpace_19():
  cd("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW/Watches/HeapSpace")
  print "setting attributes for mbean type WLDFWatch"
  set("Enabled", "true")
  set("AlarmType", "AutomaticReset")
  set("RuleType", "Log")
  set("AlarmResetPeriod", "1800000")
  set("RuleExpression", "((SEVERITY = \'Critical\') OR (SEVERITY = \'Warning\')) AND ((MSGID = \'WL-310003\') OR (MSGID = \'BEA-310003\'))")

def setAttributesFor_Web_Services_Startup_Class_49():
  cd("/StartupClasses/Web Services Startup Class")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.j2ee.ws.server.WebServiceServerStartup")
  set("DeploymentOrder", "150")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_JRF_Startup_Class_39():
  cd("/StartupClasses/JRF Startup Class")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.jrf.wls.JRFStartup")
  set("DeploymentOrder", "110")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def setAttributesFor_user_75():
  cd("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCDriverParams/oamDS/Properties/oamDS/Properties/user")
  print "setting attributes for mbean type JDBCProperty"
  set("Value", "DEV_OAM")
  set("Name", "user")

def setAttributes_JDBCConnectionPoolParams_133():
  cd("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCConnectionPoolParams/mds-oam")
  print "setting attributes for mbean type JDBCConnectionPoolParams"
  set("TestConnectionsOnReserve", "true")
  set("SecondsToTrustAnIdlePoolConnection", "0")
  set("TestFrequencySeconds", "300")
  set("InitialCapacity", "0")
  set("ConnectionCreationRetryFrequencySeconds", "10")

def setAttributes_JDBCConnectionPoolParams_134():
  cd("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCConnectionPoolParams/oamDS")
  print "setting attributes for mbean type JDBCConnectionPoolParams"
  set("TestConnectionsOnReserve", "true")
  set("InactiveConnectionTimeoutSeconds", "300")
  set("TestTableName", "SQL SELECT 1 FROM DUAL")
  set("SecondsToTrustAnIdlePoolConnection", "0")
  set("TestFrequencySeconds", "300")
  set("MaxCapacity", "100")
  set("InitialCapacity", "20")
  set("ConnectionCreationRetryFrequencySeconds", "10")
  set("CapacityIncrement", "1")

def setAttributes_JDBCDriverParams_135():
  cd("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm")
  print "setting attributes for mbean type JDBCDriverParams"
  setEncrypted("Password", "c2s136", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  setEncrypted("Password", "c2s137", "/home/oracle/c2sConfigOAM", "/home/oracle/c2sSecretOAM")
  set("DriverName", "oracle.jdbc.OracleDriver")
  set("Url", "jdbc:oracle:thin:@oim.scendoni.org:1521/orcl.scendoni.org")

def setAttributesFor_JPS_Startup_Class_41():
  cd("/StartupClasses/JPS Startup Class")
  print "setting attributes for mbean type StartupClass"
  set("FailureIsFatal", "false")
  set("LoadBeforeAppDeployments", "true")
  set("LoadBeforeAppActivation", "true")
  set("ClassName", "oracle.security.jps.wls.JpsWlsStartupClass")
  set("DeploymentOrder", "115")
  refBean0 = getMBean("/Servers/AdminServer")
  refBean1 = getMBean("/Servers/oam_server1")
  refBean2 = getMBean("/Servers/omsm_server1")
  refBean3 = getMBean("/Servers/oam_policy_mgr1")
  theValue = jarray.array([refBean0,refBean1,refBean2,refBean3], Class.forName("weblogic.management.configuration.TargetMBean"))
  cmo.setTargets(theValue)


def deploy_UIX2311_11_1_1_1_0_138():
  try:
    deploy("UIX#11@11.1.1.1.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.uix_11.1.1/uix11.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application UIX#11@11.1.1.1.0"

def deploy_adf_oracle_businesseditor231_0_11_1_1_2_0_139():
  try:
    deploy("adf.oracle.businesseditor#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.businesseditor_11.1.1/adf.businesseditor.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application adf.oracle.businesseditor#1.0@11.1.1.2.0"

def deploy_adf_oracle_domain231_0_11_1_1_2_0_140():
  try:
    deploy("adf.oracle.domain#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.model_11.1.1/adf.oracle.domain.ear","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application adf.oracle.domain#1.0@11.1.1.2.0"

def deploy_adf_oracle_domain_webapp231_0_11_1_1_2_0_141():
  try:
    deploy("adf.oracle.domain.webapp#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.view_11.1.1/adf.oracle.domain.webapp.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application adf.oracle.domain.webapp#1.0@11.1.1.2.0"

def deploy_emai_142():
  try:
    deploy("emai","/u01/oracle/product/fmw/11.1.2/oracle_common/sysman/archives/applications/11_1_1_0_0_emai.war","AdminServer,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application emai"

def deploy_emas_143():
  try:
    deploy("emas","/u01/oracle/product/fmw/11.1.2/oracle_common/sysman/archives/applications/11_1_1_0_0_emas.war","AdminServer,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application emas"

def deploy_emcore_144():
  try:
    deploy("emcore","/u01/oracle/product/fmw/11.1.2/oracle_common/sysman/archives/applications/11_1_1_0_0_emcore.war","AdminServer,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application emcore"

def deploy_gw_common2311_1_1_11_1_1_145():
  try:
    deploy("gw-common#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/omss/omsas/modules/oracle.idm.gateway.gw-common_11.1.1/gw-common.war","omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application gw-common#11.1.1@11.1.1"

def deploy_jax_rs231_1_1_9_146():
  try:
    deploy("jax-rs#1.1@1.9","/u01/oracle/product/fmw/11.1.2/wlserver_10.3/common/deployable-libraries/jersey-bundle-1.9.war","omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application jax-rs#1.1@1.9"

def deploy_jsf231_2_1_2_9_0_147():
  try:
    deploy("jsf#1.2@1.2.9.0","/u01/oracle/product/fmw/11.1.2/wlserver_10.3/common/deployable-libraries/jsf-1.2.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application jsf#1.2@1.2.9.0"

def deploy_jstl231_2_1_2_0_1_148():
  try:
    deploy("jstl#1.2@1.2.0.1","/u01/oracle/product/fmw/11.1.2/wlserver_10.3/common/deployable-libraries/jstl-1.2.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application jstl#1.2@1.2.0.1"

def deploy_ohw_rcf235_5_0_149():
  try:
    deploy("ohw-rcf#5@5.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.help_5.0/ohw-rcf.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application ohw-rcf#5@5.0"

def deploy_ohw_uix235_5_0_150():
  try:
    deploy("ohw-uix#5@5.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.help_5.0/ohw-uix.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application ohw-uix#5@5.0"

def deploy_oracle_adf_dconfigbeans231_0_11_1_1_2_0_151():
  try:
    deploy("oracle.adf.dconfigbeans#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.dconfigbeans_11.1.1.jar","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.adf.dconfigbeans#1.0@11.1.1.2.0"

def deploy_oracle_adf_desktopintegration231_0_11_1_1_2_0_152():
  try:
    deploy("oracle.adf.desktopintegration#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.desktopintegration_11.1.1/oracle.adf.desktopintegration.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.adf.desktopintegration#1.0@11.1.1.2.0"

def deploy_oracle_adf_desktopintegration_model231_0_11_1_1_2_0_153():
  try:
    deploy("oracle.adf.desktopintegration.model#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.desktopintegration.model_11.1.1/oracle.adf.desktopintegration.model.ear","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.adf.desktopintegration.model#1.0@11.1.1.2.0"

def deploy_oracle_adf_management231_0_11_1_1_2_0_154():
  try:
    deploy("oracle.adf.management#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.adf.management_11.1.1/adf-management.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.adf.management#1.0@11.1.1.2.0"

def deploy_oracle_bi_adf_model_slib231_0_11_1_1_2_0_155():
  try:
    deploy("oracle.bi.adf.model.slib#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.bi.presentation_11.1.1/bi-adf-model-slib.ear","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.bi.adf.model.slib#1.0@11.1.1.2.0"

def deploy_oracle_bi_adf_view_slib231_0_11_1_1_2_0_156():
  try:
    deploy("oracle.bi.adf.view.slib#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.bi.presentation_11.1.1/bi-adf-view-slib.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.bi.adf.view.slib#1.0@11.1.1.2.0"

def deploy_oracle_bi_adf_webcenter_slib231_0_11_1_1_2_0_157():
  try:
    deploy("oracle.bi.adf.webcenter.slib#1.0@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.bi.presentation_11.1.1/bi-adf-webcenter-slib.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.bi.adf.webcenter.slib#1.0@11.1.1.2.0"

def deploy_oracle_bi_composer2311_1_1_0_1_158():
  try:
    deploy("oracle.bi.composer#11.1.1@0.1","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.bi.presentation_11.1.1/bi-composer-slib-stub.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.bi.composer#11.1.1@0.1"

def deploy_oracle_bi_jbips2311_1_1_0_1_159():
  try:
    deploy("oracle.bi.jbips#11.1.1@0.1","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.bi.presentation_11.1.1/bi-jbips-slib-stub.ear","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.bi.jbips#11.1.1@0.1"

def deploy_oracle_bpm_mgmt2311_1_1_11_1_1_160():
  try:
    deploy("oracle.bpm.mgmt#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/oracle_common/bpm/modules/oracle.bpm.mgmt_11.1.1/oracle.bpm.bpmn-em-tools.jar","AdminServer,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.bpm.mgmt#11.1.1@11.1.1"

def deploy_oracle_dconfig_infra2311_11_1_1_1_0_161():
  try:
    deploy("oracle.dconfig-infra#11@11.1.1.1.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.dconfig-infra_11.1.1.jar","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.dconfig-infra#11@11.1.1.1.0"

def deploy_oracle_jrf_system_filter_162():
  try:
    deploy("oracle.jrf.system.filter","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.jrf_11.1.1/system-filters.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.jrf.system.filter"

def deploy_oracle_jsp_next2311_1_1_11_1_1_163():
  try:
    deploy("oracle.jsp.next#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.jsp_11.1.1/ojsp.jar","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.jsp.next#11.1.1@11.1.1"

def deploy_oracle_pwdgen2311_1_1_11_1_1_2_0_164():
  try:
    deploy("oracle.pwdgen#11.1.1@11.1.1.2.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.pwdgen_11.1.1/pwdgen.jar","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.pwdgen#11.1.1@11.1.1.2.0"

def deploy_oracle_sdp_client2311_1_1_11_1_1_165():
  try:
    deploy("oracle.sdp.client#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/communications/modules/oracle.sdp.client_11.1.1/sdpclient.jar","AdminServer,oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.sdp.client#11.1.1@11.1.1"

def deploy_oracle_wsm_seedpolicies2311_1_1_11_1_1_166():
  try:
    deploy("oracle.wsm.seedpolicies#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.wsm.policies_11.1.1/wsm-seed-policies.jar","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application oracle.wsm.seedpolicies#11.1.1@11.1.1"

def deploy_orai18n_adf2311_11_1_1_1_0_167():
  try:
    deploy("orai18n-adf#11@11.1.1.1.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.nlsgdk_11.1.0/orai18n-adf.jar","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",block="true")
  except:
    print "Could not deploy application orai18n-adf#11@11.1.1.1.0"

def deploy_oracle_idm_common_model2311_1_1_11_1_1_168():
  try:
    deploy("oracle.idm.common.model#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/modules/oracle.idm.uishell_11.1.1/oracle.idm.common.model.ear","AdminServer,oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.idm.common.model#11.1.1@11.1.1"

def deploy_oracle_idm_ids_config_ui2311_1_2_11_1_2_169():
  try:
    deploy("oracle.idm.ids.config.ui#11.1.2@11.1.2","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/modules/oracle.idm.ids.config.ui_11.1.2/oracle.idm.ids.config.ui.war","AdminServer,omsm_server1,oam_policy_mgr1,",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.idm.ids.config.ui#11.1.2@11.1.2"

def deploy_oracle_idm_ipf2311_1_2_11_1_2_170():
  try:
    deploy("oracle.idm.ipf#11.1.2@11.1.2","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/modules/oracle.idm.ipf_11.1.2/ipf.jar","AdminServer,oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.idm.ipf#11.1.2@11.1.2"

def deploy_oracle_idm_msm_ui_library2311_1_2_11_1_2_171():
  try:
    deploy("oracle.idm.msm.ui.library#11.1.2@11.1.2","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/omss/omsm/oracle.idm.msm.ui.library.war","omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.idm.msm.ui.library#11.1.2@11.1.2"

def deploy_oracle_idm_uishell2311_1_1_11_1_1_172():
  try:
    deploy("oracle.idm.uishell#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/modules/oracle.idm.uishell_11.1.1/oracle.idm.uishell.war","AdminServer,oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.idm.uishell#11.1.1@11.1.1"

def deploy_oracle_webcenter_composer2311_1_1_11_1_1_173():
  try:
    deploy("oracle.webcenter.composer#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/oracle_common/webcenter/modules/oracle.webcenter.framework_11.1.1/oracle.webcenter.composer.war","AdminServer,oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.webcenter.composer#11.1.1@11.1.1"

def deploy_oracle_webcenter_skin2311_1_1_11_1_1_174():
  try:
    deploy("oracle.webcenter.skin#11.1.1@11.1.1","/u01/oracle/product/fmw/11.1.2/oracle_common/webcenter/modules/oracle.portlet.server_11.1.1/oracle.webcenter.skin.ear","AdminServer,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=300,block="true")
  except:
    print "Could not deploy application oracle.webcenter.skin#11.1.1@11.1.1"

def deploy_oracle_omsas_ui_core231_0_11_1_1_0_175():
  try:
    deploy("oracle.omsas.ui.core#1.0@11.1.1.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/omss/omsas/modules/oracle.omsas.ui.core_11.1.1/oracle.omsas.ui.core.war","oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=311,block="true")
  except:
    print "Could not deploy application oracle.omsas.ui.core#1.0@11.1.1.0"

def deploy_oracle_oaam_libs2311_1_2_0_0_11_1_2_0_0_176():
  try:
    deploy("oracle.oaam.libs#11.1.2.0.0@11.1.2.0.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/oaam/oaam_libs/ear/oaam_native_lib.ear","oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",libraryModule="true",deploymentOrder=400,block="true")
  except:
    print "Could not deploy application oracle.oaam.libs#11.1.2.0.0@11.1.2.0.0"

def deploy_DMS_Application2311_1_1_1_0_177():
  try:
    deploy("DMS Application#11.1.1.1.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.dms_11.1.1/dms.war","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="CustomRoles",deploymentOrder=5,block="true")
  except:
    print "Could not deploy application DMS Application#11.1.1.1.0"

def deploy_FMW_Welcome_Page_Application2311_1_0_0_0_178():
  try:
    deploy("FMW Welcome Page Application#11.1.0.0.0","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.jrf_11.1.1/fmw-welcome.ear","AdminServer,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=5,block="true")
  except:
    print "Could not deploy application FMW Welcome Page Application#11.1.0.0.0"

def deploy_wsil_wls_179():
  try:
    deploy("wsil-wls","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.webservices_11.1.1/wsil-wls.ear","AdminServer,oam_server1,omsm_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=5,block="true")
  except:
    print "Could not deploy application wsil-wls"

def deploy_wsm_pm_180():
  try:
    deploy("wsm-pm","/u01/oracle/product/fmw/11.1.2/oracle_common/modules/oracle.wsm.pm_11.1.1/wsm-pm.ear","omsm_server1,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=5,block="true")
  except:
    print "Could not deploy application wsm-pm"

def deploy_em_181():
  try:
    deploy("em","/u01/oracle/product/fmw/11.1.2/user_projects/applications/OAM/em.ear","AdminServer,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=400,block="true")
  except:
    print "Could not deploy application em"

def deploy_oam_admin2311_1_2_0_0_182():
  try:
    deploy("oam_admin#11.1.2.0.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/oam/server/apps/oam-admin.ear","AdminServer,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=400,block="true")
  except:
    print "Could not deploy application oam_admin#11.1.2.0.0"

def deploy_oam_server2311_1_2_0_0_183():
  try:
    deploy("oam_server#11.1.2.0.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/oam/server/apps/oam-server.ear","oam_server1,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=410,block="true")
  except:
    print "Could not deploy application oam_server#11.1.2.0.0"

def deploy_oamsso_logout2311_1_2_0_0_184():
  try:
    deploy("oamsso_logout#11.1.2.0.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/oam/agent/apps/oam-wlsagent-logout.war","AdminServer,oam_server1,oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=411,block="true")
  except:
    print "Could not deploy application oamsso_logout#11.1.2.0.0"

def deploy_oam_policy_mgr2311_1_2_0_0_185():
  try:
    deploy("oam_policy_mgr#11.1.2.0.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/oam/server/apps/oam-policy-mgr.ear","oam_policy_mgr1,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=450,block="true")
  except:
    print "Could not deploy application oam_policy_mgr#11.1.2.0.0"

def deploy_omsm2311_1_2_3_0_186():
  try:
    deploy("omsm#11.1.2.3.0","/u01/oracle/product/fmw/11.1.2/Oracle_IDM1/omss/omsm/omsm.ear","omsm_server1,",stageMode="nostage",securityModel="DDOnly",deploymentOrder=500,block="true")
  except:
    print "Could not deploy application omsm#11.1.2.3.0"

try:
  initConfigToScriptRun()
  startTransaction()
  create_Server_0("/", "AdminServer")
  create_Server_0("/", "oam_server1")
  create_Server_0("/", "omsm_server1")
  create_Server_0("/", "oam_policy_mgr1")
  create_WLDFSystemResource_8("/", "Module-FMWDFW")
  create_JMXNotification_10("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW", "FMWDFW-notification")
  create_Watch_12("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW", "UncheckedException")
  create_Watch_12("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW", "Deadlock")
  create_Watch_12("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW", "StuckThread")
  create_Watch_12("/WLDFSystemResources/Module-FMWDFW/WLDFResource/Module-FMWDFW/WatchNotification/Module-FMWDFW", "HeapSpace")
  create_Realm_20("/SecurityConfiguration/OAM", "myrealm")
  create_Authorizer_22("/SecurityConfiguration/OAM/Realms/myrealm", "XACMLAuthorizer")
  create_Adjudicator_24("/SecurityConfiguration/OAM/Realms/myrealm", "DefaultAdjudicator")
  create_AuthenticationProvider_26("/SecurityConfiguration/OAM/Realms/myrealm", "DefaultAuthenticator")
  create_AuthenticationProvider_26("/SecurityConfiguration/OAM/Realms/myrealm", "DefaultIdentityAsserter")
  create_AuthenticationProvider_26("/SecurityConfiguration/OAM/Realms/myrealm", "IAMSuiteAgent")
  create_CertPathProvider_32("/SecurityConfiguration/OAM/Realms/myrealm", "WebLogicCertPathProvider")
  create_CredentialMapper_34("/SecurityConfiguration/OAM/Realms/myrealm", "DefaultCredentialMapper")
  create_RoleMapper_36("/SecurityConfiguration/OAM/Realms/myrealm", "XACMLRoleMapper")
  create_StartupClass_38("/", "JRF Startup Class")
  create_StartupClass_38("/", "JPS Startup Class")
  create_StartupClass_38("/", "ODL-Startup")
  create_StartupClass_38("/", "AWT Application Context Startup Class")
  create_StartupClass_38("/", "JMX Framework Startup Class")
  create_StartupClass_38("/", "Web Services Startup Class")
  create_StartupClass_38("/", "JOC-Startup")
  create_StartupClass_38("/", "DMS-Startup")
  create_StartupClass_38("/", "GMS-Startup")
  create_ShutdownClass_56("/", "JOC-Shutdown")
  create_ShutdownClass_56("/", "DMSShutdown")
  create_JDBCSystemResource_60("/", "opss-DBDS")
  create_Property_62("/JDBCSystemResources/opss-DBDS/JDBCResource/opss-DBDS/JDBCDriverParams/opss-DBDS/Properties/opss-DBDS", "user")
  create_JDBCSystemResource_60("/", "mds-owsm")
  create_Property_62("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm/Properties/mds-owsm", "user")
  create_Property_62("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm/Properties/mds-owsm", "oracle.net.CONNECT_TIMEOUT")
  create_Property_62("/JDBCSystemResources/mds-owsm/JDBCResource/mds-owsm/JDBCDriverParams/mds-owsm/Properties/mds-owsm", "SendStreamAsBlob")
  create_JDBCSystemResource_60("/", "oamDS")
  create_Property_62("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCDriverParams/oamDS/Properties/oamDS", "user")
  create_Property_62("/JDBCSystemResources/oamDS/JDBCResource/oamDS/JDBCDriverParams/oamDS/Properties/oamDS", "oracle.net.CONNECT_TIMEOUT")
  create_JDBCSystemResource_60("/", "omsm-ds")
  create_Property_62("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCDriverParams/omsm-ds/Properties/omsm-ds", "user")
  create_Property_62("/JDBCSystemResources/omsm-ds/JDBCResource/omsm-ds/JDBCDriverParams/omsm-ds/Properties/omsm-ds", "oracle.net.CONNECT_TIMEOUT")
  create_JDBCSystemResource_60("/", "mds-oam")
  create_Property_62("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam/Properties/mds-oam", "user")
  create_Property_62("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam/Properties/mds-oam", "oracle.net.CONNECT_TIMEOUT")
  create_Property_62("/JDBCSystemResources/mds-oam/JDBCResource/mds-oam/JDBCDriverParams/mds-oam/Properties/mds-oam", "SendStreamAsBlob")
  setAttributesFor_AdminServer_1()
  setAttributesFor_oam_server1_3()
  setAttributesFor_omsm_server1_5()
  setAttributesFor_oam_policy_mgr1_7()
  setAttributesFor_Module_FMWDFW_9()
  setAttributesFor_FMWDFW_notification_11()
  setAttributesFor_UncheckedException_13()
  setAttributesFor_Deadlock_15()
  setAttributesFor_StuckThread_17()
  setAttributesFor_HeapSpace_19()
  setAttributesFor_DefaultAuthenticator_27()
  setAttributesFor_DefaultIdentityAsserter_29()
  setAttributesFor_JRF_Startup_Class_39()
  setAttributesFor_JPS_Startup_Class_41()
  setAttributesFor_ODL_Startup_43()
  setAttributesFor_AWT_Application_Context_Startup_Class_45()
  setAttributesFor_JMX_Framework_Startup_Class_47()
  setAttributesFor_Web_Services_Startup_Class_49()
  setAttributesFor_JOC_Startup_51()
  setAttributesFor_DMS_Startup_53()
  setAttributesFor_GMS_Startup_55()
  setAttributesFor_JOC_Shutdown_57()
  setAttributesFor_DMSShutdown_59()
  setAttributesFor_opss_DBDS_61()
  setAttributesFor_user_63()
  setAttributesFor_mds_owsm_65()
  setAttributesFor_user_67()
  setAttributesFor_oracle_net_CONNECT_TIMEOUT_69()
  setAttributesFor_SendStreamAsBlob_71()
  setAttributesFor_oamDS_73()
  setAttributesFor_user_75()
  setAttributesFor_oracle_net_CONNECT_TIMEOUT_77()
  setAttributesFor_omsm_ds_79()
  setAttributesFor_user_81()
  setAttributesFor_oracle_net_CONNECT_TIMEOUT_83()
  setAttributesFor_mds_oam_85()
  setAttributesFor_user_87()
  setAttributesFor_oracle_net_CONNECT_TIMEOUT_89()
  setAttributesFor_SendStreamAsBlob_91()
  setAttributes_JDBCConnectionPoolParams_92()
  setAttributes_JDBCDriverParams_93()
  setAttributes_JDBCConnectionPoolParams_96()
  setAttributes_JDBCDataSource_97()
  setAttributes_EmbeddedLDAP_98()
  setAttributes_JDBCDataSource_101()
  setAttributes_JDBCDriverParams_102()
  setAttributes_JDBCDataSourceParams_105()
  setAttributes_JDBCDataSourceParams_106()
  setAttributes_WLDFServerDiagnostic_107()
  setAttributes_JDBCDataSource_108()
  setAttributes_JDBCDriverParams_109()
  setAttributes_JDBCDataSource_112()
  setAttributes_JDBCDataSourceParams_113()
  setAttributes_WLDFServerDiagnostic_114()
  setAttributes_JDBCDataSource_115()
  setAttributes_WLDFServerDiagnostic_116()
  setAttributes_SecurityConfiguration_117()
  setAttributes_JDBCConnectionPoolParams_122()
  setAttributes_JDBCDataSourceParams_123()
  setAttributes_SSL_124()
  setAttributes_JDBCDriverParams_125()
  setAttributes_SSL_128()
  setAttributes_WLDFServerDiagnostic_129()
  setAttributes_SSL_130()
  setAttributes_Domain_131()
  setAttributes_JDBCDataSourceParams_132()
  setAttributes_JDBCConnectionPoolParams_133()
  setAttributes_JDBCConnectionPoolParams_134()
  setAttributes_JDBCDriverParams_135()
  endTransaction()
  deploy_UIX2311_11_1_1_1_0_138()
  deploy_adf_oracle_businesseditor231_0_11_1_1_2_0_139()
  deploy_adf_oracle_domain231_0_11_1_1_2_0_140()
  deploy_adf_oracle_domain_webapp231_0_11_1_1_2_0_141()
  deploy_emai_142()
  deploy_emas_143()
  deploy_emcore_144()
  deploy_gw_common2311_1_1_11_1_1_145()
  deploy_jax_rs231_1_1_9_146()
  deploy_jsf231_2_1_2_9_0_147()
  deploy_jstl231_2_1_2_0_1_148()
  deploy_ohw_rcf235_5_0_149()
  deploy_ohw_uix235_5_0_150()
  deploy_oracle_adf_dconfigbeans231_0_11_1_1_2_0_151()
  deploy_oracle_adf_desktopintegration231_0_11_1_1_2_0_152()
  deploy_oracle_adf_desktopintegration_model231_0_11_1_1_2_0_153()
  deploy_oracle_adf_management231_0_11_1_1_2_0_154()
  deploy_oracle_bi_adf_model_slib231_0_11_1_1_2_0_155()
  deploy_oracle_bi_adf_view_slib231_0_11_1_1_2_0_156()
  deploy_oracle_bi_adf_webcenter_slib231_0_11_1_1_2_0_157()
  deploy_oracle_bi_composer2311_1_1_0_1_158()
  deploy_oracle_bi_jbips2311_1_1_0_1_159()
  deploy_oracle_bpm_mgmt2311_1_1_11_1_1_160()
  deploy_oracle_dconfig_infra2311_11_1_1_1_0_161()
  deploy_oracle_jrf_system_filter_162()
  deploy_oracle_jsp_next2311_1_1_11_1_1_163()
  deploy_oracle_pwdgen2311_1_1_11_1_1_2_0_164()
  deploy_oracle_sdp_client2311_1_1_11_1_1_165()
  deploy_oracle_wsm_seedpolicies2311_1_1_11_1_1_166()
  deploy_orai18n_adf2311_11_1_1_1_0_167()
  deploy_oracle_idm_common_model2311_1_1_11_1_1_168()
  deploy_oracle_idm_ids_config_ui2311_1_2_11_1_2_169()
  deploy_oracle_idm_ipf2311_1_2_11_1_2_170()
  deploy_oracle_idm_msm_ui_library2311_1_2_11_1_2_171()
  deploy_oracle_idm_uishell2311_1_1_11_1_1_172()
  deploy_oracle_webcenter_composer2311_1_1_11_1_1_173()
  deploy_oracle_webcenter_skin2311_1_1_11_1_1_174()
  deploy_oracle_omsas_ui_core231_0_11_1_1_0_175()
  deploy_oracle_oaam_libs2311_1_2_0_0_11_1_2_0_0_176()
  deploy_UIX2311_11_1_1_1_0_138()
  deploy_adf_oracle_businesseditor231_0_11_1_1_2_0_139()
  deploy_adf_oracle_domain231_0_11_1_1_2_0_140()
  deploy_adf_oracle_domain_webapp231_0_11_1_1_2_0_141()
  deploy_emai_142()
  deploy_emas_143()
  deploy_emcore_144()
  deploy_gw_common2311_1_1_11_1_1_145()
  deploy_jax_rs231_1_1_9_146()
  deploy_jsf231_2_1_2_9_0_147()
  deploy_jstl231_2_1_2_0_1_148()
  deploy_ohw_rcf235_5_0_149()
  deploy_ohw_uix235_5_0_150()
  deploy_oracle_adf_dconfigbeans231_0_11_1_1_2_0_151()
  deploy_oracle_adf_desktopintegration231_0_11_1_1_2_0_152()
  deploy_oracle_adf_desktopintegration_model231_0_11_1_1_2_0_153()
  deploy_oracle_adf_management231_0_11_1_1_2_0_154()
  deploy_oracle_bi_adf_model_slib231_0_11_1_1_2_0_155()
  deploy_oracle_bi_adf_view_slib231_0_11_1_1_2_0_156()
  deploy_oracle_bi_adf_webcenter_slib231_0_11_1_1_2_0_157()
  deploy_oracle_bi_composer2311_1_1_0_1_158()
  deploy_oracle_bi_jbips2311_1_1_0_1_159()
  deploy_oracle_bpm_mgmt2311_1_1_11_1_1_160()
  deploy_oracle_dconfig_infra2311_11_1_1_1_0_161()
  deploy_oracle_jrf_system_filter_162()
  deploy_oracle_jsp_next2311_1_1_11_1_1_163()
  deploy_oracle_pwdgen2311_1_1_11_1_1_2_0_164()
  deploy_oracle_sdp_client2311_1_1_11_1_1_165()
  deploy_oracle_wsm_seedpolicies2311_1_1_11_1_1_166()
  deploy_orai18n_adf2311_11_1_1_1_0_167()
  deploy_oracle_idm_common_model2311_1_1_11_1_1_168()
  deploy_oracle_idm_ids_config_ui2311_1_2_11_1_2_169()
  deploy_oracle_idm_ipf2311_1_2_11_1_2_170()
  deploy_oracle_idm_msm_ui_library2311_1_2_11_1_2_171()
  deploy_oracle_idm_uishell2311_1_1_11_1_1_172()
  deploy_oracle_webcenter_composer2311_1_1_11_1_1_173()
  deploy_oracle_webcenter_skin2311_1_1_11_1_1_174()
  deploy_oracle_omsas_ui_core231_0_11_1_1_0_175()
  deploy_oracle_oaam_libs2311_1_2_0_0_11_1_2_0_0_176()
  deploy_DMS_Application2311_1_1_1_0_177()
  deploy_FMW_Welcome_Page_Application2311_1_0_0_0_178()
  deploy_wsil_wls_179()
  deploy_wsm_pm_180()
  deploy_em_181()
  deploy_oam_admin2311_1_2_0_0_182()
  deploy_oam_server2311_1_2_0_0_183()
  deploy_oamsso_logout2311_1_2_0_0_184()
  deploy_oam_policy_mgr2311_1_2_0_0_185()
  deploy_omsm2311_1_2_3_0_186()
finally:
  endOfConfigToScriptRun()
